name: Application CI

on:
  push:
    branches:

concurrency:
  group: application-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  DISPLAY: ":99"
  XVFB_PARMS: "-screen 0 1920x1080x24 -nolisten unix"

jobs:
  gradle:
    name: 'Gradle Wrapper Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
  lint:
    name: 'Eldoria: Lint'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.pull_request.title, '[skip ci]')
      && !contains(github.event.pull_request.title, '[ci skip]')
    env:
      NODE_VERSION: 22.2.0
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{NODE_VERSION}}
      - uses: actions/cache@v3
        with:
          path: .npm
          key: ${{ runner.os }}-npm
          restore-keys: ${{ runner.os }}-npm
      - run: npm ci --cache .npm
      - run: npm run prettier:check
  app:
    name: 'Eldoria: Build and Test'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.pull_request.title, '[skip ci]')
      && !contains(github.event.pull_request.title, '[ci skip]')
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Set up Virtual Display (for Linux)
        if: runner.os == 'Linux'
        run: |
          Xvfb ${{env.DISPLAY}} ${{env.XVFB_PARMS}} &
      - name: Run Tests
        run: ./gradlew checkstyleNohttp check --no-daemon -Dlogging.level.ROOT=OFF
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --no-daemon -Dsonar.organization=bbortt-github -Dsonar.host.url=https://sonarcloud.io
#  native:
#    name: 'Eldoria: Native-Build ${{ matrix.os }}'
#    runs-on: ${{ matrix.os }}
#    needs:
#      - app
#    defaults:
#      run:
#        shell: bash
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest] # , macos-latest, windows-2019
#    steps:
#      - uses: actions/checkout@v3
#      - uses: graalvm/setup-graalvm@v1
#        with:
#          java-version: '21'
#          distribution: 'graalvm'
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle
#      - name: Native Compilation
#        run: ./gradlew nativeCompile --no-daemon
#      - uses: actions/upload-artifact@v4
#        with:
#          name: Eldoria CLI
#          path: build/native/nativeCompile
