name: Application CI
on:
  push:
    branches:
concurrency:
  group: application-ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  gradle:
    name: 'Gradle Wrapper Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
  app:
    name: 'Eldoria: Build and Test'
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
      && !contains(github.event.head_commit.message, '[ci skip]')
      && !contains(github.event.head_commit.message, '[skip ci]')
      && !contains(github.event.pull_request.title, '[skip ci]')
      && !contains(github.event.pull_request.title, '[ci skip]')
    env:
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Run Tests
        run: ./gradlew checkstyleNohttp check --no-daemon -Dlogging.level.ROOT=OFF
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --no-daemon -Dsonar.organization=bbortt-github -Dsonar.host.url=https://sonarcloud.io
  native:
    name: 'Eldoria: Native-Build ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    needs:
      - app
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macos-latest, windows-2019
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Native Compilation
        run: ./gradlew nativeCompile --no-daemon
      - uses: actions/upload-artifact@v4
        with:
          name: Eldoria CLI
          path: build/native/nativeCompile
